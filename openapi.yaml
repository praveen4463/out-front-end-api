# In some places we've taken invalid types as endpoints rejected those types. Per below, ESP won't
# stop a request based on parameters and ignores them so we're good with some invalid types.
# https://cloud.google.com/endpoints/docs/openapi/openapi-limitations
# !!! If you see error like 'host domain is not verified' but https://cloud.google.com/endpoints/docs/openapi/verify-domain-name
# shows you own the domain, just add gcloud account's email in the owner's list of domain.
# Before running, make sure to switch gcloud's project so that api is created on correct project.
swagger: "2.0"
info:
  description: Zylitics front end api
  title: Zylitics front end api
  # This version no. is just to showing in the console and has no affect on functionality, although it should be
  # updated whenever production version is updated.
  version: 0.3.12
host: front.api.zylitics.io
x-google-endpoints:
  - name: front.api.zylitics.io
    allowCors: True
basePath: /beta
schemes:
  - http # TLS is terminated before hitting ESP, so only http.
consumes:
  - application/json
produces:
  - application/json
paths:
  /actuator/health: # adding this here wasn't required if we just wanted it to be accessed from
  # cluster's health check as it accesses the container directly without going to esp on container's
  # port.
    get:
      operationId: health
      security: []
      responses:
        200:
          description: OK
          schema:
            type: string
        default:
          description: Unexpected exception
  /projects:
    post:
      description: Creates a new project
      operationId: newProject
      parameters:
        - in: body
          name: project
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Project'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    get:
      description: Gets all projects for given user
      operationId: getProjects
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}:
    get:
      description: Gets project for given id
      operationId: getProject
      parameters:
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Project'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      description: Delete project using given id
      operationId: deleteProject
      parameters:
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/renameProject:
    patch:
      description: Gets project for given id
      operationId: renameProject
      parameters:
        - in: body
          name: renameProjectRequest
          required: true
          schema:
            $ref: '#/definitions/RenameProjectRequest'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /passwordResets:
    post:
      description: Sends password reset email
      operationId: sendPasswordReset
      parameters:
        - in: body
          name: passwordResetRequest
          required: true
          schema:
            $ref: '#/definitions/PasswordResetRequest'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /passwordResets/{code}/validate:
    patch:
      description: Validate password reset request
      operationId: validatePasswordReset
      parameters:
        - $ref: '#/parameters/code'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ValidatePasswordResetResponse'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /passwordResets/{passwordResetId}/resetPassword:
    patch:
      description: Reset password
      operationId: resetPassword
      parameters:
        - in: body
          name: resetPasswordRequest
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordRequest'
        - in: path
          name: passwordResetId
          type: integer
          format: long
          required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /emailChanges:
    post:
      description: Sends email change email
      operationId: sendEmailChange
      parameters:
        - in: body
          name: emailChangeRequest
          required: true
          schema:
            $ref: '#/definitions/EmailChangeRequest'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /emailChanges/{code}/validate:
    patch:
      description: Validate email change request
      operationId: validateEmailChange
      parameters:
        - $ref: '#/parameters/code'
      responses:
        200:
          description: OK
          schema:
            type: integer
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /emailChanges/{emailChangeId}/changeEmail:
    patch:
      description: Change email
      operationId: changeEmail
      parameters:
        - in: path
          name: emailChangeId
          type: integer
          format: long
          required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /emailVerifications/{code}/validate:
    patch:
      description: Validate email verification request
      operationId: validateEmailVerification
      parameters:
        - $ref: '#/parameters/code'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /testFiles:
    put:
      description: Upload test file
      operationId: uploadTestFile
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: string # made it string rather than file as endpoints doesn't seem to support it
          required: true
        - in: formData
          name: fileName
          type: string
          required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    get:
      description: Gets all testFiles for given user
      operationId: getTestFiles
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TestFile'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /testFiles/{fileName}:
    get:
      description: Download testFile by fileName
      operationId: getTestFile
      produces:
        - image/png
      parameters:
        - $ref: '#/parameters/fileName'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
              format: byte
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      description: Delete testFile by fileName
      operationId: deleteTestFile
      parameters:
        - $ref: '#/parameters/fileName'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /issue:
    put:
      description: Upload issue file
      operationId: uploadIssueFile
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: string # made it string rather than file as endpoint doesn't seem to support file
          required: true
        - in: formData
          name: fileName
          type: string
          required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    post:
      description: Send issue
      operationId: sendIssue
      parameters:
        - in: body
          name: sendIssueRequest
          required: true
          schema:
            $ref: '#/definitions/SendIssueRequest'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /buildCapabilities:
    post:
      description: New capability or update
      operationId: newCapabilityOrUpdate
      parameters:
        - in: body
          name: buildCapability
          required: true
          schema:
            $ref: '#/definitions/BuildCapability'
      responses:
        200:
          description: New or existing buildCapabilityId
          schema:
            type: integer
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    get:
      description: Gets all buildCapabilityIdentifiers for given user
      operationId: getBuildCapabilityIdentifiers
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BuildCapabilityIdentifier'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /buildCapabilities/{buildCapabilityId}:
    get:
      description: Gets buildCapability
      operationId: getBuildCapability
      parameters:
        - $ref: '#/parameters/buildCapabilityId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BuildCapability'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      description: Delete buildCapability
      operationId: deleteBuildCapability
      parameters:
        - $ref: '#/parameters/buildCapabilityId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/files:
    post:
      description: New file
      operationId: newFile
      parameters:
        - in: body
          name: file
          required: true
          schema:
            $ref: '#/definitions/File'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: New file
          schema:
            $ref: '#/definitions/File'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    get:
      description: Gets all fileIdentifiers for user
      operationId: getFileIdentifiers
      parameters:
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FileIdentifier'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    patch:
      description: Rename file
      operationId: renameFile
      parameters:
        - in: body
          name: file
          required: true
          schema:
            $ref: '#/definitions/File'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/files/getWithTests:
    get:
      description: Gets all files with tests for user
      operationId: getFilesWithTests
      parameters:
        - in: query
          name: fileIdsFilter
          description: comma separated fileIds to filter
          required: false
          type: array
          collectionFormat: csv
          items:
            type: integer
        - in: query
          name: excludeCode
          description: should versions carry their code in response?
          required: false
          type: boolean
        - in: query
          name: excludeNoCodeTests
          description: should exclude versions that have empty code?
          required: false
          type: boolean
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/File'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/files/{fileId}:
    delete:
      description: Deletes a file
      operationId: deleteFile
      parameters:
        - in: path
          name: fileId
          type: integer
          required: true
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /tests:
    post:
      description: New test
      operationId: newTest
      parameters:
        - in: body
          name: test
          required: true
          schema:
            $ref: '#/definitions/Test'
      responses:
        200:
          description: New test
          schema:
            $ref: '#/definitions/Test'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    patch:
      description: Rename test
      operationId: renameTest
      parameters:
        - in: body
          name: test
          required: true
          schema:
            $ref: '#/definitions/Test'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /tests/{testId}:
    delete:
      description: Deletes a test
      operationId: deleteTest
      parameters:
        - in: path
          name: testId
          type: integer
          required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /versions:
    post:
      description: New testVersion
      operationId: newTestVersion
      parameters:
        - in: body
          name: testVersion
          required: true
          schema:
            $ref: '#/definitions/TestVersion'
      responses:
        200:
          description: New testVersion
          schema:
            $ref: '#/definitions/TestVersion'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /versions/{versionId}:
    delete:
      description: Deletes a testVersion
      operationId: deleteTestVerion
      parameters:
        - $ref: '#/parameters/versionId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /versions/{versionId}/renameVersion:
    patch:
      description: Rename testVersion
      operationId: renameTestVersion
      parameters:
        - in: body
          name: testVersionRename
          required: true
          schema:
            $ref: '#/definitions/TestVersionRename'
        - $ref: '#/parameters/versionId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /versions/{versionId}/updateCodeAndParse:
    patch:
      description: Update code and parse
      operationId: updateCodeAndParse
      parameters:
        - in: body
          name: updateCodeRequest
          required: true
          schema:
            $ref: '#/definitions/UpdateCodeRequest'
        - $ref: '#/parameters/versionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VersionParseError'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /versions/{versionIds}/parse:
    get:
      description: Parse versions
      operationId: parse
      parameters:
        - in: path
          name: versionIds
          description: comma separated versionIds to parse
          required: true
          type: string # removed type array as Cloud endpoints doesn't seem to support it
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VersionParseError'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/versions/{versionId}/dryRun:
    post:
      description: Dry run
      operationId: dryRun
      parameters:
        - in: body
          name: dryRunConfig
          required: true
          schema:
            $ref: '#/definitions/DryRunConfig'
        - $ref: '#/parameters/projectId'
        - $ref: '#/parameters/versionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DryRunResult'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/buildVars:
    post:
      description: New buildVar
      operationId: newBuildVar
      parameters:
        - in: body
          name: buildVar
          required: true
          schema:
            $ref: '#/definitions/BuildVar'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: new buildVarId
          schema:
            type: integer
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    patch:
      description: Update buildVar value
      operationId: updateBuildVarValue
      parameters:
        - in: body
          name: updateBuildVarRequest
          required: true
          schema:
            $ref: '#/definitions/UpdateBuildVarRequest'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    get:
      description: Gets all buildVars
      operationId: getBuildVars
      parameters:
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BuildVar'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/buildVars/{buildVarId}:
    delete:
      description: Deletes a buildVar
      operationId: deleteBuildVar
      parameters:
        - $ref: '#/parameters/projectId'
        - in: path
          name: buildVarId
          type: integer
          required: true
        - in: query
          name: isPrimary
          type: boolean
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/globalVars:
    post:
      description: New globalVar
      operationId: newGlobalVar
      parameters:
        - in: body
          name: globalVar
          required: true
          schema:
            $ref: '#/definitions/GlobalVar'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: new globalVarId
          schema:
            type: integer
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    patch:
      description: Update globalVar value
      operationId: updateGlobalVarValue
      parameters:
        - in: body
          name: updateGlobalVarRequest
          required: true
          schema:
            $ref: '#/definitions/UpdateGlobalVarRequest'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
    get:
      description: Gets all globalVars
      operationId: getGloalVars
      parameters:
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/GlobalVar'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/globalVars/{globalVarId}:
    delete:
      description: Deletes a globalVar
      operationId: deleteGlobalVar
      parameters:
        - $ref: '#/parameters/projectId'
        - in: path
          name: globalVarId
          type: integer
          required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /platforms/{platform}/getBrowsers:
    get:
      description: Gets all browsers for platform
      operationId: getBrowsers
      parameters:
        - in: path
          required: true
          type: string
          name: platform
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BrowserNameToVersions'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /browsers:
    get:
      description: Gets all available browsers
      operationId: getAllBrowsers
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BrowserNameToVersions'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/builds:
    post:
      description: New build
      operationId: newBuild
      parameters:
        - in: body
          name: buildRunConfig
          required: true
          schema:
            $ref: '#/definitions/BuildRunConfig'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: responds with NewSessionResponse
          schema:
            $ref: '#/definitions/NewSessionResponse'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/builds/newBuildWithoutSession:
    post:
      description: New build without creating session
      operationId: newBuildWithoutSession
      parameters:
        - in: body
          name: buildRunConfig
          required: true
          schema:
            $ref: '#/definitions/BuildRunConfig'
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: responds with new buildId
          schema:
            type: integer
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/newSession:
    post:
      description: New session from a build without session
      operationId: newSession
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: responds with NewSessionResponse
          schema:
            $ref: '#/definitions/NewSessionResponse'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/reRun:
    post:
      description: Re run build from a completed build
      operationId: reRun
      parameters:
        - in: body
          name: buildReRunConfig
          required: true
          schema:
            $ref: '#/definitions/BuildReRunConfig'
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: responds with new buildId without session
          schema:
            type: integer
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/builds/getCompletedBuildSummary:
    get:
      description: Get completed builds summary
      operationId: getCompletedBuildSummary
      parameters:
        - in: query
          name: start
          required: true
          type: string
          format: date-time
        - in: query
          name: end
          required: true
          type: string
          format: date-time
        - in: query
          name: status
          required: false
          type: string
          enum: [ERROR, STOPPED, ABORTED, SUCCESS]
        - in: query
          name: brw
          required: false
          type: string
        - in: query
          name: brwV
          required: false
          type: string
        - in: query
          name: os
          required: false
          type: string
        - in: query
          name: after
          required: false
          type: integer
        - in: query
          name: before
          required: false
          type: integer
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: responds with CompletedBuildsSummaryWithPaging
          schema:
            $ref: '#/definitions/CompletedBuildsSummaryWithPaging'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/stopBuild:
    patch:
      description: Stop running build
      operationId: stopBuild
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/versions/{versionId}/getBuildStatusOutput:
    get:
      description: Gets build's status and output
      operationId: getBuildStatusOutput
      parameters:
        - $ref: '#/parameters/buildId'
        - $ref: '#/parameters/versionId'
        - in: query
          required: false
          name: nextOutputToken
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BuildStatusOutput'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getLatestShot:
    get:
      description: Gets latest shot for build
      operationId: getLatestShot
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: latest shot name
          schema:
            type: string
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getShotBasicDetails:
    get:
      description: Gets basic shot details for build and optional versionId
      operationId: getShotBasicDetails
      parameters:
        - $ref: '#/parameters/buildId'
        - in: query
          required: false
          name: versionId
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ShotBasicDetails'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getCapturedBuildCapability:
    get:
      description: Gets capture buildCapability for build
      operationId: getCapturedBuildCapability
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BuildCapability'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getCapturedBuildVars:
    get:
      description: Gets capture buildVars for build
      operationId: getCapturedBuildVars
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CapturedVariable'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getCapturedGlobalVars:
    get:
      description: Gets capture globalVars for build
      operationId: getCapturedGlobalVars
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CapturedVariable'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getRunnerPreferences:
    get:
      description: Gets runnerPreferences
      operationId: getRunnerPreferences
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RunnerPreferences'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getCompletedBuildDetails:
    get:
      description: Gets completedBuildDetails for build
      operationId: getCompletedBuildDetails
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CompletedBuildDetails'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getDriverLogs:
    get:
      description: Gets driver logs
      operationId: getDriverLogs
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            type: string
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getPerformanceLogs:
    get:
      description: Gets performances logs
      operationId: getPerformanceLogs
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            type: string
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getElementShotNames:
    get:
      description: Gets element shot names
      operationId: getElementShotNames
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/versions/{versionId}/getVersionOutputDetails:
    get:
      description: Get output for a version
      operationId: getVersionOutputDetails
      parameters:
        - $ref: '#/parameters/buildId'
        - $ref: '#/parameters/versionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BuildOutputDetailsByVersion'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getBuildOutputDetails:
    get:
      description: Get output for a build
      operationId: getBuildOutputDetails
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BuildOutputDetailsByVersion'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/versions/{versionId}/getCapturedCode:
    get:
      description: Get captured code of a version
      operationId: getCapturedCode
      parameters:
        - $ref: '#/parameters/buildId'
        - $ref: '#/parameters/versionId'
      responses:
        200:
          description: OK
          schema:
            type: string
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /projects/{projectId}/builds/getRunningBuilds:
    get:
      description: Get running builds
      operationId: getRunningBuilds
      parameters:
        - in: query
          name: after
          required: false
          type: integer
        - $ref: '#/parameters/projectId'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RunningBuild'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /builds/{buildId}/getRunningBuildSummary:
    get:
      description: Get running build summary
      operationId: getRunningBuildSummary
      parameters:
        - $ref: '#/parameters/buildId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RunningBuildSummary'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /users:
    post:
      description: New user
      operationId: newUser
      parameters:
        - in: body
          name: newUserRequest
          required: true
          schema:
            $ref: '#/definitions/NewUserRequest'
      responses:
        200:
          description: NewUserResponse with User and customToken
          schema:
            $ref: '#/definitions/NewUserResponse'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /users/current:
    get:
      description: get currently logged-in user
      operationId: getUser
      responses:
        200:
          description: The currently logged-in user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /users/current/getUserPlan:
    get:
      description: get currently logged-in user's plan
      operationId: getUserPlan
      responses:
        200:
          description: The currently logged-in user's plan
          schema:
            $ref: '#/definitions/UsersPlan'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /users/current/updateUserProfile:
    patch:
      description: update currently logged-in user's profile
      operationId: updateUserProfile
      parameters:
        - in: body
          name: userUpdatableProfile
          required: true
          schema:
            $ref: '#/definitions/UserUpdatableProfile'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /invitationRequest:
    post:
      description: Request invitation
      operationId: invitationRequest
      parameters:
        - in: body
          name: newInvitationRequest
          required: true
          schema:
            $ref: '#/definitions/NewInvitationRequest'
      responses:
        200:
          description: OK
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
  /discourseSSO/getUserDetailForSSO:
    get:
      description: get the payload required for discourse sso
      operationId: getUserDetailForSSO
      parameters:
        - in: query
          name: sso
          required: true
          type: string
        - in: query
          name: sig
          required: true
          type: string
      responses:
        200:
          description: Required payload for discourse sso
          schema:
            $ref: '#/definitions/DiscourseSSOResponse'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/ApiError'
securityDefinitions:
  firebase:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://securetoken.google.com/zl-front-end"
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com"
    x-google-audiences: "zl-front-end"
security:
  - firebase: []
parameters:
  projectId:
    in: path
    name: projectId
    type: integer
    required: true
  buildId:
    in: path
    name: buildId
    type: integer
    required: true
  versionId:
    in: path
    name: versionId
    type: integer
    required: true
  fileName:
    in: path
    name: fileName
    type: string
    required: true
  buildCapabilityId:
    in: path
    name: buildCapabilityId
    type: integer
    required: true
  code:
    in: path
    name: code
    type: string
    required: true
definitions:
  LineInfo:
    type: object
    properties:
      line:
        type: integer
      ch:
        type: integer
  RunError:
    type: object
    properties:
      msg:
        type: string
      from:
        $ref: '#/definitions/LineInfo'
      to:
        $ref: '#/definitions/LineInfo'
  RenameProjectRequest:
    type: object
    properties:
      name:
        type: string
  PasswordResetRequest:
    type: object
    properties:
      email:
        type: string
  ResetPasswordRequest:
    type: object
    properties:
      password:
        type: string
        format: password
  ValidatePasswordResetResponse:
    type: object
    properties:
      passwordResetId:
        type: integer
        format: int64
      email:
        type: string
  EmailVerificationRequest:
    type: object
    properties:
      email:
        type: string
      emailVerificationUserType:
        type: string
        enum: [NORMAL, IN_ORGANIZATION, BETA_INVITEE]
      senderName:
        type: string
      organizationId:
        type: integer
      organizationName:
        type: string
      role:
        type: string
        enum: [ADMIN, DEVELOPER]
  EmailChangeRequest:
    type: object
    properties:
      newEmail:
        type: string
  BuildStatusOutput:
    type: object
    properties:
      status:
        type: string
        enum: [RUNNING, ERROR, STOPPED, ABORTED, SUCCESS]
      currentLine:
        type: integer
      output:
        type: string
      nextOutputToken:
        type: string
      timeTaken:
        type: integer
        format: int64
      error:
        $ref: '#/definitions/RunError'
  NewUserRequest:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
        format: password
      timezone:
        type: string
      utcOffsetInMinutes:
        type: integer
      emailVerificationId:
        type: integer
      organizationName:
        type: string
  Organization:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  UsersPlan:
    type: object
    properties:
      planType:
        type: string
        enum: [FREE, PAID]
      planName:
        type: string
      displayName:
        type: string
      consumedMinutes:
        type: integer
      totalParallel:
        type: integer
      totalMinutes:
        type: integer
      billingCycleStart:
        type: integer
        format: int64
      billingCyclePlannedEnd:
        type: integer
        format: int64
  User:
    type: object
    properties:
      id:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      timezone:
        type: string
      role:
        type: string
        enum: [ADMIN, DEVELOPER]
      organizationId:
        type: integer
      shotBucketSessionStorage:
        type: string
      emailVerificationId:
        type: integer
        format: int64
      organization:
        $ref: '#/definitions/Organization'
      usersPlan:
        $ref: '#/definitions/UsersPlan'
  NewUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      customToken:
        type: string
  UserUpdatableProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      timezone:
        type: string
      organizationName:
        type: string
  CapturedVariable:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Paging:
    type: object
    properties:
      hasNewer:
        type: boolean
      hasOlder:
        type: boolean
  CompletedBuildSummary:
    type: object
    properties:
      buildId:
        type: integer
      buildName:
        type: string
      finalStatus:
        type: string
        enum: [RUNNING, ERROR, STOPPED, ABORTED, SUCCESS]
      error:
        type: string
      buildSourceType:
        type: string
        enum: [IDE, CI, NOT_IDE]
      createDate:
        type: integer
        format: int64
      testTimeMillis:
        type: integer
        format: int64
      totalSuccess:
        type: integer
      totalError:
        type: integer
      totalStopped:
        type: integer
      totalAborted:
        type: integer
      os:
        type: string
      browserName:
        type: string
  CompletedBuildsSummaryWithPaging:
    type: object
    properties:
      completedBuildsSummary:
        type: array
        items:
          $ref: '#/definitions/CompletedBuildSummary'
      paging:
        $ref: '#/definitions/Paging'
  TestVersionDetails:
    type: object
    properties:
      versionId:
        type: integer
      versionName:
        type: string
      status:
        type: string
        enum: [RUNNING, ERROR, STOPPED, ABORTED, SUCCESS]
      timeTakenMillis:
        type: integer
        format: int64
      fileName:
        type: string
      testName:
        type: string
  CompletedBuildDetails:
    type: object
    properties:
      buildId:
        type: integer
      buildName:
        type: string
      finalStatus:
        type: string
        enum: [RUNNING, ERROR, STOPPED, ABORTED, SUCCESS]
      createDate:
        type: integer
        format: int64
      testTimeMillis:
        type: integer
        format: int64
      os:
        type: string
      browserName:
        type: string
      browserVersion:
        type: string
      resolution:
        type: string
      timezone:
        type: string
      buildCapsName:
        type: string
      shotBucket:
        type: string
      allDoneDate:
        type: integer
        format: int64
      driverLogsAvailable:
        type: boolean
      perfLogsAvailable:
        type: boolean
      elemShotsAvailable:
        type: boolean
      testVersionDetailsList:
        type: array
        items:
          $ref: '#/definitions/TestVersionDetails'
  BuildOutputDetailsByVersion:
    type: object
    properties:
      buildId:
        type: integer
      versionId:
        type: integer
      outputsWithLineBreak:
        type: string
      error:
        type: string
  ShotBasicDetails:
    type: object
    properties:
      totalShots:
        type: integer
        format: int64
      firstShot:
        type: string
      lastShot:
        type: string
  BuildIdentifier:
    type: object
    properties:
      buildId:
        type: integer
      buildKey:
        type: string
  NewSessionResponse:
    type: object
    properties:
      buildIdentifier:
        $ref: '#/definitions/BuildIdentifier'
      sessionId:
        type: string
  RunnerPreferences:
    type: object
    properties:
      abortOnFailure:
        type: boolean
      aetKeepSingleWindow:
        type: boolean
      aetUpdateUrlBlank:
        type: boolean
      aetResetTimeouts:
        type: boolean
      aetDeleteAllCookies:
        type: boolean
  BuildRunConfig:
    type: object
    required:
      - buildCapabilityId
      - displayResolution
      - timezone
      - versionIds
    properties:
      buildCapabilityId:
        type: integer
      displayResolution:
        type: string
      timezone:
        type: string
      selectedBuildVarIdPerKey:
        type: object
        additionalProperties:
          type: integer
      runnerPreferences:
        $ref: '#/definitions/RunnerPreferences'
      buildSourceType:
        type: string
        enum: [IDE, CI, NOT_IDE]
      versionIds:
        type: array
        items:
          type: integer
  BuildReRunConfig:
    type: object
    properties:
      buildSourceType:
        type: array
        enum: [IDE, CI, NOT_IDE]
  BrowserNameToVersions:
    type: object
    properties:
      name:
        type: string
      versions:
        type: array
        items:
          type: string
  GlobalVar:
    type: object
    required:
      - key
      - value
    properties:
      id:
        type: integer
      key:
        type: string
      value:
        type: string
  UpdateGlobalVarRequest:
    type: object
    required:
      - value
      - globalVarId
    properties:
      value:
        type: string
      globalVarId:
        type: integer
  BuildVar:
    type: object
    required:
      - key
      - value
    properties:
      id:
        type: integer
      key:
        type: string
      value:
        type: string
      isPrimary:
        type: boolean
  UpdateBuildVarRequest:
    type: object
    required:
      - columnId
      - value
      - buildVarId
    properties:
      columnId:
        type: string
      value:
        type: string
      buildVarId:
        type: integer
  Project:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
      name:
        type: string
  TestVersion:
    type: object
    required:
      - name
      - testId
    properties:
      id:
        type: integer
      name:
        type: string
      testId:
        type: integer
      code:
        type: string
      isCurrent:
        type: boolean
  Test:
    type: object
    required:
      - name
      - fileId
    properties:
      id:
        type: integer
      name:
        type: string
      fileId:
        type: integer
      versions:
        type: array
        items:
          $ref: '#/definitions/TestVersion'
  File:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
      name:
        type: string
      tests:
        type: array
        items:
          $ref: '#/definitions/Test'
  TestVersionRename:
    type: object
    required:
      - name
      - testId
    properties:
      name:
        type: string
      testId:
        type: integer
  VersionParseError:
    type: object
    properties:
      versionId:
        type: integer
      error:
        $ref: '#/definitions/RunError'
  UpdateCodeRequest:
    type: object
    required:
      - code
    properties:
      code:
        type: string
  DryRunResult:
    type: object
    properties:
      timeTaken:
        type: integer
        format: int64
      output:
        type: string
      error:
        $ref: '#/definitions/RunError'
  Browser:
    type: object
    required:
      - name
      - version
    properties:
      name:
        type: string
      version:
        type: string
  DryRunConfig:
    type: object
    required:
      - platform
      - selectedBuildVarIdPerKey
    properties:
      browser:
        $ref: '#/definitions/Browser'
      platform:
        type: string
      selectedBuildVarIdPerKey:
        type: object
        additionalProperties:
          type: integer
  FileIdentifier:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  ApiError:
    type: object
    required:
      - message
    properties:
      message:
        type: string
  TestFile:
    type: object
    properties:
      name:
        type: string
      size:
        type: string
      createDate:
        type: string
  SendIssueRequest:
    type: object
    required:
      - desc
    properties:
      desc:
        type: string
      fileName:
        type: string
  BuildCapabilityIdentifier:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  BuildCapability:
    type: object
    required:
      - name
      - serverOs
      - wdBrowserName
      - wdBrowserVersion
      - wdPlatformName
    properties:
      id:
        type: integer
      name:
        type: string
      serverOs:
        type: string
      wdBrowserName:
        type: string
      wdBrowserVersion:
        type: string
      wdPlatformName:
        type: string
      wdAcceptInsecureCerts:
        type: boolean
      wdTimeoutsScript:
        type: integer
      wdTimeoutsPageLoad:
        type: integer
      wdTimeoutsElementAccess:
        type: integer
      wdStrictFileInteractability:
        type: boolean
      wdUnhandledPromptBehavior:
        type: string
      wdIeElementScrollBehavior:
        type: string
      wdIeEnablePersistentHovering:
        type: boolean
      wdIeRequireWindowFocus:
        type: boolean
      wdIeDisableNativeEvents:
        type: boolean
      wdIeDestructivelyEnsureCleanSession:
        type: boolean
      wdIeLogLevel:
        type: string
      wdChromeVerboseLogging:
        type: boolean
      wdChromeSilentOutput:
        type: boolean
      wdChromeEnableNetwork:
        type: boolean
      wdChromeEnablePage:
        type: boolean
      wdFirefoxLogLevel:
        type: string
      wdBrwStartMaximize:
        type: boolean
      createDateFormatted:
        type: string
  RunningBuild:
    type: object
    properties:
      buildId:
        type: integer
      buildKey:
        type: string
      buildName:
        type: string
      shotBucket:
        type: string
      os:
        type: string
      browserName:
        type: string
  RunningBuildSummary:
    type: object
    properties:
      buildId:
        type: integer
      sessionKey:
        type: string
      acquiringSession:
        type: boolean
      newSessionFail:
        type: boolean
      newSessionFailureError:
        type: string
      allDone:
        type: boolean
      runningForMillis:
        type: integer
        format: int64
      finalStatus:
        type: string
        enum: [RUNNING, ERROR, STOPPED, ABORTED, SUCCESS]
      testVersionDetailsList:
        type: array
        items:
          $ref: '#/definitions/TestVersionDetails'
  NewInvitationRequest:
    type: object
    required:
      - email
    properties:
      email:
        type: string
  DiscourseSSOResponse:
    type: object
    required:
      - sso
      - sig
    properties:
      sso:
        type: string
      sig:
        type: string
